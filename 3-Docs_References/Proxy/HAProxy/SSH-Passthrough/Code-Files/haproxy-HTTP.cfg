global
    # Define Minimum TLS/SSL Version Supported
    ssl-default-bind-options ssl-min-ver TLSv1.2  

    # This will output all logs in their raw format to local0 so that we can see all logs
    # It is possible to forward them to a specific service or container.
    log stdout format raw local0

    # Set Maximum number of connections to 20
    maxconn  20
defaults
    # Enable global logging in all FE and BE
    log global
    # Enable more verbose HTTP logging
    option httplog
    # Set default mode of FE and BE to http (overridden individually)
    mode http
    
    # Set timeout for attempts at connections
    timeout connect 5s
    # Set client timeout at 20s, if the client stops sending packets for 20 seconds close the connection
    timeout client 20s
    # Set serve timeout at 20s, if the server stops sending packets for 20 seconds close the connection
    timeout server 20s


# Define a frontend, and give it a name (this name is used in the logging!)
frontend fe_http
    # Explicitly define the mode (not needed due to defaults)
    mode http

    # bind (listen) on port 80 apply all following rules and forwarding to received traffic
    bind *:80

    # We can create access control lists to filter traffic based on certain conditions, in this case we want to remove access to the admin page.
    acl restricted_page path_beg, url_dec -i /admin
    # This defines the default backend to use, we will forward traffic unless the request is to the restricted page. 
    use_backend be_http unless restricted_page

# Define backend, and give it a name (this name is used in the logging!)
backend be_http
    # Explicitly define the mode (not needed due to defaults)
    mode http 

    # Define the load balancing type (default is RoundRobin)
    balance roundrobin

    # List of servers, they each have a name and route to a server using (docker) DNS on their desired port (8000)
    # They have the form server <nameLog> <Hostname/IP:Port> options
    # check specifies that health checks should occur
    server node1 web1:8000 check
    server node  web2:8000 check
